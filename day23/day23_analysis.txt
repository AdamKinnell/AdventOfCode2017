set b 79        # b = 79
set c b         #
jnz a 2         # 
jnz 1 5         # 
mul b 100       # b *= 100
sub b -100000   # b += 100_000
set c b         # c = b
sub c -17000    # c += 17_000

                # b = 107_900
                # c = 124_900

                        <================
set f 1         # f = 1                 | is_prime = 1
set d 2         # d = 2                 | d = 2
                                        |
                # do {                  | do {
set e 2         #     e = 2             |   e = 2
                #     do {              |   do {
set g d         #         g = d         |   
mul g e         #         g *= e        |   
sub g b         #         g -= b        |   
jnz g 2         #         if g == 0:    |     if d*e == b:
set f 0         #             f = 0     |         is_prime = 0
sub e -1        #         e += 1        |     e++
set g e         #         g = e         |   
sub g b         #         g -= b        |     
jnz g -8        #     } while (g != 0)  |   } while(e != b)
sub d -1        #     d += 1            |   d++
set g d         #     g = d             |
sub g b         #     g -= b            |
jnz g -13       # } while (g != 0)      | } while(d != b)
                                        |
jnz f 2         # if f == 0:            |  if !is_prime:
sub h -1        #     h += 1            |      composites++
set g b         # g = b                 |
sub g c         # g -= c                |
jnz g 2         # if g == 0:            |  if b == c:
jnz 1 3         #     exit              |      exit
sub b -17       # b += 17               |  b += 17
jnz 1 -23       #        ================

# Pseudocode ########################################################

// Runs 1_000 times
composites = 0
for (n = 107_900, n <= 124_900, n += 17) {

    is_prime = true

    // Check all possible factors
    for (p = 2; p < n; p++) {
        for (q = 2; q < n; q++) {
            if (p*q) == n:
                is_prime = false
        }
    }

    if !is_prime:
        composites++
}